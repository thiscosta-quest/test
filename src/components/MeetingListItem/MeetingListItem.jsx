/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import useMeetingListItem from 'src/components/MeetingListItem/useMeetingListItem';

const AlertFalseHoverTrueS = styled('div', {
  shouldForwardProp: (prop) => !['props', 'data'].includes(prop.toString()),
})(({ theme, props, data }) => ({
  boxShadow: `inset 0px -1px 0px rgba(172, 172, 172, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: `251px`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `12px`,
  boxSizing: `border-box`,
  height: `62px`,
  backgroundColor: data.isSelected
    ? theme.palette['Primary']['Shades']['12p']
    : props.isHover
    ? theme.palette['Error']['Shades']['12p']
    : theme.palette['Primary']['Contrast'],
}));

const Frame1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ImportantAppointment = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `14px`,
  letterSpacing: `0.15000000596046448px`,
  textDecoration: `none`,
  lineHeight: `142.99999475479126%`,
  textTransform: `none`,
  flex: `1`,
  margin: `0px`,
}));

const Q930Am945Am = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `400`,
  fontSize: `12px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `16px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `2px 0px 0px 0px`,
  cursor: `pointer`,
}));

function MeetingListItem(props) {
  const { data, fns } = useMeetingListItem(props);

  return (
    <AlertFalseHoverTrueS className={props.className} props={props} data={data}>
      <Frame1>
        {data.items &&
          data.items.map((item, index) => {
            return (
              <ImportantAppointment key={index}>
                {`Important Appointment `}
              </ImportantAppointment>
            );
          })}
      </Frame1>
      <Q930Am945Am onClick={fns.onClick}>{props.prop1}</Q930Am945Am>
    </AlertFalseHoverTrueS>
  );
}

export default MeetingListItem;
